<!DOCTYPE html>
<html>
<head>
	<title>grid-moving</title>
</head>
<style type="text/css">
	body {
	min-height: 100vh;
	display: grid;
	grid-template: repeat(10, 1fr) / repeat(10, 1fr);
	grid-gap: 3vw;
	place-items: stretch;
	perspective: 500;
	background: #111;
	margin: 3vw;
}

.box {
	background: purple;
	transform-style: preserve-3d;
	transform: rotateX(var(--y)) rotateY(var(--x));
	transition: .2s;
	&:hover {
		transform: none;
	}
}
</style>
<body>
	<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<div class="box"></div>
<script type="text/javascript">
	boxes = [...document.querySelectorAll(".box")].map(box => {
  const { x, y, width, height } = box.getBoundingClientRect();
  const {
    width: bodyWidth,
    height: bodyHeight
  } = document.body.getBoundingClientRect();
  return {
    element: box,
    x: Math.floor(((x + width / 2) * 100) / bodyWidth),
    y: Math.floor(((y + height / 2) * 100) / bodyHeight)
  };
});

let mousePosition = { x: 0, y: 0 };

document.body.addEventListener("mousemove", event => {
  const { height, width } = document.body.getBoundingClientRect();
  mousePosition.x = Math.floor((event.clientX * 100) / width);
  mousePosition.y = Math.floor((event.clientY * 100) / height);
});

const applyPosition = () => {
  boxes.map(box => {
    box.element.style.setProperty(
      "--x",
      `${(mousePosition.x - box.x) / 1.3}deg`
    );
    box.element.style.setProperty(
      "--y",
      `${(box.y - mousePosition.y) / 1.3}deg`
    );
  });
  window.requestAnimationFrame(applyPosition);
};

window.requestAnimationFrame(applyPosition);

</script>
</body>
</html>
